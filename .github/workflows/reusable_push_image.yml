name: "♻️ Push image to Docker Hub"

on:
  workflow_call:
    inputs:
      image_tags:
        type: string
        required: true
        description: "List of comma-separated image tags to push to registry (eg: `latest,v1`)"

jobs:
  build_and_push_each_arch:
    name: Build docker image and push it to Docker Hub
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux/amd64
            tag_suffix: amd64
          - os: ubuntu-24.04-arm
            platform: linux/arm64
            tag_suffix: arm64
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: read
    env:
      IMAGE_TAGS: ${{ inputs.image_tags }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3

      - name: Create image names
        id: image-names
        run: echo -e "IMAGE_TAGS<<EOF\n$(echo '${{ env.IMAGE_TAGS }}' | sed 's/,/\n/' | sed 's|^|${{ secrets.DOCKERHUB_USERNAME }}/promtail_cleaner:|' | sed 's/$/-${{ matrix.tag_suffix }}/')\nEOF" >> $GITHUB_OUTPUT

      - name: Build and push image
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5
        with:
          context: .
          file: ./Dockerfile
          target: prod
          platforms: ${{ matrix.platform }}
          cache-from: type=gha
          cache-to: type=gha,mode=max # multi-stage build's all layer cached
          push: true
          tags: ${{ steps.image-names.outputs.IMAGE_TAGS }}
          provenance: false # FYI: https://github.com/docker/build-push-action/releases/tag/v4.0.0
